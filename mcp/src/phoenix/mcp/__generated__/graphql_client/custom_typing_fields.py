# Generated by ariadne-codegen

from .base_operation import GraphQLField


class AnnotationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AnnotationGraphQLField":
        self._alias = alias
        return self


class AnnotationSummaryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AnnotationSummaryGraphQLField":
        self._alias = alias
        return self


class ApiKeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApiKeyGraphQLField":
        self._alias = alias
        return self


class BinUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "BinUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "BinUnion":
        self._alias = alias
        return self


class BooleanInvocationParameterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BooleanInvocationParameterGraphQLField":
        self._alias = alias
        return self


class BoundedFloatInvocationParameterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BoundedFloatInvocationParameterGraphQLField":
        self._alias = alias
        return self


class ChatCompletionFunctionCallGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionFunctionCallGraphQLField":
        self._alias = alias
        return self


class ChatCompletionMutationErrorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionMutationErrorGraphQLField":
        self._alias = alias
        return self


class ChatCompletionMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionMutationPayloadGraphQLField":
        self._alias = alias
        return self


class ChatCompletionMutationPayloadChatCompletionMutationErrorUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ChatCompletionMutationPayloadChatCompletionMutationErrorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(
        self, alias: str
    ) -> "ChatCompletionMutationPayloadChatCompletionMutationErrorUnion":
        self._alias = alias
        return self


class ChatCompletionOverDatasetMutationExamplePayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ChatCompletionOverDatasetMutationExamplePayloadGraphQLField":
        self._alias = alias
        return self


class ChatCompletionOverDatasetMutationPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ChatCompletionOverDatasetMutationPayloadGraphQLField":
        self._alias = alias
        return self


class ChatCompletionSubscriptionErrorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionSubscriptionErrorGraphQLField":
        self._alias = alias
        return self


class ChatCompletionSubscriptionExperimentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionSubscriptionExperimentGraphQLField":
        self._alias = alias
        return self


class ChatCompletionSubscriptionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionSubscriptionPayloadGraphQLField":
        self._alias = alias
        return self


class ChatCompletionSubscriptionResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionSubscriptionResultGraphQLField":
        self._alias = alias
        return self


class ChatCompletionToolCallGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatCompletionToolCallGraphQLField":
        self._alias = alias
        return self


class ClusterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClusterGraphQLField":
        self._alias = alias
        return self


class ContentPartUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ContentPartUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ContentPartUnion":
        self._alias = alias
        return self


class CreateSystemApiKeyMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateSystemApiKeyMutationPayloadGraphQLField":
        self._alias = alias
        return self


class CreateUserApiKeyMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateUserApiKeyMutationPayloadGraphQLField":
        self._alias = alias
        return self


class DataQualityTimeSeriesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DataQualityTimeSeriesGraphQLField":
        self._alias = alias
        return self


class DatasetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetGraphQLField":
        self._alias = alias
        return self


class DatasetConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetConnectionGraphQLField":
        self._alias = alias
        return self


class DatasetEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetEdgeGraphQLField":
        self._alias = alias
        return self


class DatasetExampleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetExampleGraphQLField":
        self._alias = alias
        return self


class DatasetExampleConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetExampleConnectionGraphQLField":
        self._alias = alias
        return self


class DatasetExampleEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetExampleEdgeGraphQLField":
        self._alias = alias
        return self


class DatasetExampleRevisionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetExampleRevisionGraphQLField":
        self._alias = alias
        return self


class DatasetMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetMutationPayloadGraphQLField":
        self._alias = alias
        return self


class DatasetValuesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetValuesGraphQLField":
        self._alias = alias
        return self


class DatasetVersionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetVersionGraphQLField":
        self._alias = alias
        return self


class DatasetVersionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetVersionConnectionGraphQLField":
        self._alias = alias
        return self


class DatasetVersionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DatasetVersionEdgeGraphQLField":
        self._alias = alias
        return self


class DbTableStatsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DbTableStatsGraphQLField":
        self._alias = alias
        return self


class DeleteApiKeyMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteApiKeyMutationPayloadGraphQLField":
        self._alias = alias
        return self


class DeletePromptMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeletePromptMutationPayloadGraphQLField":
        self._alias = alias
        return self


class DimensionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DimensionGraphQLField":
        self._alias = alias
        return self


class DimensionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DimensionConnectionGraphQLField":
        self._alias = alias
        return self


class DimensionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DimensionEdgeGraphQLField":
        self._alias = alias
        return self


class DimensionWithValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DimensionWithValueGraphQLField":
        self._alias = alias
        return self


class DocumentEvaluationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentEvaluationGraphQLField":
        self._alias = alias
        return self


class DocumentEvaluationSummaryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentEvaluationSummaryGraphQLField":
        self._alias = alias
        return self


class DocumentRetrievalMetricsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DocumentRetrievalMetricsGraphQLField":
        self._alias = alias
        return self


class DriftTimeSeriesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DriftTimeSeriesGraphQLField":
        self._alias = alias
        return self


class EmbeddingDimensionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingDimensionGraphQLField":
        self._alias = alias
        return self


class EmbeddingDimensionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingDimensionConnectionGraphQLField":
        self._alias = alias
        return self


class EmbeddingDimensionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingDimensionEdgeGraphQLField":
        self._alias = alias
        return self


class EmbeddingMetadataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmbeddingMetadataGraphQLField":
        self._alias = alias
        return self


class EventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EventGraphQLField":
        self._alias = alias
        return self


class EventMetadataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EventMetadataGraphQLField":
        self._alias = alias
        return self


class ExampleRevisionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExampleRevisionGraphQLField":
        self._alias = alias
        return self


class ExperimentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentGraphQLField":
        self._alias = alias
        return self


class ExperimentAnnotationSummaryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentAnnotationSummaryGraphQLField":
        self._alias = alias
        return self


class ExperimentComparisonGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentComparisonGraphQLField":
        self._alias = alias
        return self


class ExperimentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentConnectionGraphQLField":
        self._alias = alias
        return self


class ExperimentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentEdgeGraphQLField":
        self._alias = alias
        return self


class ExperimentMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentMutationPayloadGraphQLField":
        self._alias = alias
        return self


class ExperimentRunGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentRunGraphQLField":
        self._alias = alias
        return self


class ExperimentRunAnnotationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentRunAnnotationGraphQLField":
        self._alias = alias
        return self


class ExperimentRunAnnotationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentRunAnnotationConnectionGraphQLField":
        self._alias = alias
        return self


class ExperimentRunAnnotationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentRunAnnotationEdgeGraphQLField":
        self._alias = alias
        return self


class ExperimentRunConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentRunConnectionGraphQLField":
        self._alias = alias
        return self


class ExperimentRunEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExperimentRunEdgeGraphQLField":
        self._alias = alias
        return self


class ExportedFileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExportedFileGraphQLField":
        self._alias = alias
        return self


class FloatInvocationParameterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FloatInvocationParameterGraphQLField":
        self._alias = alias
        return self


class FunctionCallChunkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FunctionCallChunkGraphQLField":
        self._alias = alias
        return self


class FunctionalityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FunctionalityGraphQLField":
        self._alias = alias
        return self


class GenerativeModelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GenerativeModelGraphQLField":
        self._alias = alias
        return self


class GenerativeProviderGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GenerativeProviderGraphQLField":
        self._alias = alias
        return self


class InferencesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "InferencesGraphQLField":
        self._alias = alias
        return self


class IntInvocationParameterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IntInvocationParameterGraphQLField":
        self._alias = alias
        return self


class IntervalBinGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IntervalBinGraphQLField":
        self._alias = alias
        return self


class InvocationParameterUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "InvocationParameterUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "InvocationParameterUnion":
        self._alias = alias
        return self


class InvocationParameterBaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "InvocationParameterBaseGraphQLField":
        self._alias = alias
        return self


class JSONInvocationParameterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JSONInvocationParameterGraphQLField":
        self._alias = alias
        return self


class LabelFractionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelFractionGraphQLField":
        self._alias = alias
        return self


class MissingValueBinGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MissingValueBinGraphQLField":
        self._alias = alias
        return self


class ModelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ModelGraphQLField":
        self._alias = alias
        return self


class NodeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NodeGraphQLField":
        self._alias = alias
        return self


class NominalBinGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NominalBinGraphQLField":
        self._alias = alias
        return self


class NumericRangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NumericRangeGraphQLField":
        self._alias = alias
        return self


class PageInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PageInfoGraphQLField":
        self._alias = alias
        return self


class PerformanceTimeSeriesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PerformanceTimeSeriesGraphQLField":
        self._alias = alias
        return self


class Point2DGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Point2DGraphQLField":
        self._alias = alias
        return self


class Point2DPoint3DUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "Point2DPoint3DUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "Point2DPoint3DUnion":
        self._alias = alias
        return self


class Point3DGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "Point3DGraphQLField":
        self._alias = alias
        return self


class ProjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectGraphQLField":
        self._alias = alias
        return self


class ProjectConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectSessionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectSessionGraphQLField":
        self._alias = alias
        return self


class ProjectSessionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectSessionConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectSessionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectSessionEdgeGraphQLField":
        self._alias = alias
        return self


class PromptGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptGraphQLField":
        self._alias = alias
        return self


class PromptChatTemplateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptChatTemplateGraphQLField":
        self._alias = alias
        return self


class PromptConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptConnectionGraphQLField":
        self._alias = alias
        return self


class PromptEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptEdgeGraphQLField":
        self._alias = alias
        return self


class PromptLabelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptLabelGraphQLField":
        self._alias = alias
        return self


class PromptLabelConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptLabelConnectionGraphQLField":
        self._alias = alias
        return self


class PromptLabelEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptLabelEdgeGraphQLField":
        self._alias = alias
        return self


class PromptLabelMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptLabelMutationPayloadGraphQLField":
        self._alias = alias
        return self


class PromptMessageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptMessageGraphQLField":
        self._alias = alias
        return self


class PromptResponseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptResponseGraphQLField":
        self._alias = alias
        return self


class PromptStringTemplateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptStringTemplateGraphQLField":
        self._alias = alias
        return self


class PromptTemplateUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "PromptTemplateUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "PromptTemplateUnion":
        self._alias = alias
        return self


class PromptVersionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptVersionGraphQLField":
        self._alias = alias
        return self


class PromptVersionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptVersionConnectionGraphQLField":
        self._alias = alias
        return self


class PromptVersionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptVersionEdgeGraphQLField":
        self._alias = alias
        return self


class PromptVersionTagGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptVersionTagGraphQLField":
        self._alias = alias
        return self


class PromptVersionTagMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PromptVersionTagMutationPayloadGraphQLField":
        self._alias = alias
        return self


class ResponseFormatGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ResponseFormatGraphQLField":
        self._alias = alias
        return self


class RetrievalGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RetrievalGraphQLField":
        self._alias = alias
        return self


class RunComparisonItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RunComparisonItemGraphQLField":
        self._alias = alias
        return self


class SegmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SegmentGraphQLField":
        self._alias = alias
        return self


class SegmentsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SegmentsGraphQLField":
        self._alias = alias
        return self


class SpanGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpanGraphQLField":
        self._alias = alias
        return self


class SpanAnnotationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpanAnnotationGraphQLField":
        self._alias = alias
        return self


class SpanAnnotationMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpanAnnotationMutationPayloadGraphQLField":
        self._alias = alias
        return self


class SpanAsExampleRevisionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpanAsExampleRevisionGraphQLField":
        self._alias = alias
        return self


class SpanConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpanConnectionGraphQLField":
        self._alias = alias
        return self


class SpanContextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpanContextGraphQLField":
        self._alias = alias
        return self


class SpanEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpanEdgeGraphQLField":
        self._alias = alias
        return self


class SpanEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpanEventGraphQLField":
        self._alias = alias
        return self


class SpanIOValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SpanIOValueGraphQLField":
        self._alias = alias
        return self


class StringInvocationParameterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StringInvocationParameterGraphQLField":
        self._alias = alias
        return self


class StringListInvocationParameterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StringListInvocationParameterGraphQLField":
        self._alias = alias
        return self


class SystemApiKeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemApiKeyGraphQLField":
        self._alias = alias
        return self


class TextChunkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TextChunkGraphQLField":
        self._alias = alias
        return self


class TextContentPartGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TextContentPartGraphQLField":
        self._alias = alias
        return self


class TextContentValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TextContentValueGraphQLField":
        self._alias = alias
        return self


class TimeSeriesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeSeriesGraphQLField":
        self._alias = alias
        return self


class TimeSeriesDataPointGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeSeriesDataPointGraphQLField":
        self._alias = alias
        return self


class TokenUsageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TokenUsageGraphQLField":
        self._alias = alias
        return self


class ToolCallChunkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToolCallChunkGraphQLField":
        self._alias = alias
        return self


class ToolCallContentPartGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToolCallContentPartGraphQLField":
        self._alias = alias
        return self


class ToolCallContentValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToolCallContentValueGraphQLField":
        self._alias = alias
        return self


class ToolCallFunctionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToolCallFunctionGraphQLField":
        self._alias = alias
        return self


class ToolDefinitionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToolDefinitionGraphQLField":
        self._alias = alias
        return self


class ToolResultContentPartGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToolResultContentPartGraphQLField":
        self._alias = alias
        return self


class ToolResultContentValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToolResultContentValueGraphQLField":
        self._alias = alias
        return self


class TraceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TraceGraphQLField":
        self._alias = alias
        return self


class TraceAnnotationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TraceAnnotationGraphQLField":
        self._alias = alias
        return self


class TraceAnnotationMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TraceAnnotationMutationPayloadGraphQLField":
        self._alias = alias
        return self


class TraceConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TraceConnectionGraphQLField":
        self._alias = alias
        return self


class TraceEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TraceEdgeGraphQLField":
        self._alias = alias
        return self


class UMAPPointGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UMAPPointGraphQLField":
        self._alias = alias
        return self


class UMAPPointsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UMAPPointsGraphQLField":
        self._alias = alias
        return self


class UserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserGraphQLField":
        self._alias = alias
        return self


class UserApiKeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserApiKeyGraphQLField":
        self._alias = alias
        return self


class UserConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserConnectionGraphQLField":
        self._alias = alias
        return self


class UserEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserEdgeGraphQLField":
        self._alias = alias
        return self


class UserMutationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserMutationPayloadGraphQLField":
        self._alias = alias
        return self


class UserRoleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserRoleGraphQLField":
        self._alias = alias
        return self


class ValidationResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ValidationResultGraphQLField":
        self._alias = alias
        return self
